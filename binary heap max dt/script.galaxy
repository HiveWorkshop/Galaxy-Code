//heap position neighbor getters


int heapGetWeight(int pointer) { return getWeight(pointer); }
int heapGetSize(string heapName) { return getSize(heapName); }
int heapGetFirst(string heapName) { return getPointer(1, heapName); }

void heapChangeWeight(int pointer, int newWeight, string heapName) {
	int oldWeight = getWeight(pointer);
	
	setWeight(pointer + oldWeight - 1, 0);
	setWeight(pointer, newWeight);
	setWeight(pointer + newWeight - 1, newWeight);
	
	if (newWeight > oldWeight) {
		bubbleUp(pointer, newWeight, getPosition(pointer, heapName), heapName);
	} //if
	else {
		bubbleDown(pointer, newWeight, getPosition(pointer, heapName), heapName, getSize(heapName));
	} //else
} //heapUpdate

static int defragment(int pointer, int pointerSize, string heapName, int min, int max, int size) {
	bool add = false;
	int pointer2;
	int pointer2size;

	pointer2 = pointer - 1;
	pointer2size = heapGetWeight(pointer2);
	if (pointer2 >= min && 0 != pointer2size) {
		pointer = pointer2 - pointer2size + 1;
		pointerSize = pointerSize + pointer2size;
		
		setWeight(pointer2, 0);
	} //if
	else {
		add = true;
	} //else

	pointer2 = pointer + pointerSize;
	pointer2size = heapGetWeight(pointer2);
	if (pointer2 <= max && 0 != pointer2size) {
		if (!add) {
			heapRemove(pointer2, heapName);
			setWeight(pointer + pointerSize - 1, 0);
		} //if
		else {
			setPosition(pointer, getPosition(pointer2, heapName), heapName);
			setWeight(pointer2, 0);
		
			add = false;
		} //else
		
		pointerSize = pointerSize + pointer2size;
	} //if
	
	if (add) {
		setPosition(pointer, size, heapName);
		setSize(size, heapName);
	} //if
	
	setWeight(pointer, pointerSize);
	setWeight(pointer + pointerSize - 1, pointerSize);
	
	return pointer;
} //defragment

void heapInsert(int pointer, int weight, string heapName, int min, int max) {
	pointer = defragment(pointer, weight, heapName, min, max, getSize(heapName) + 1);
	bubbleUp(pointer, getWeight(pointer), getPosition(pointer, heapName), heapName);
} //heapInsert

int heapValidate(string heapName) {
	int errors = 0;
	int position = getSize(heapName);
	bool[25000] duplicates;
	
	while (position > 1) {
		if (duplicates[getPointer(position, heapName)]) {
			errors = errors + 1;
		} //if
		if (getWeight(getPointer(getParentPosition(position), heapName)) < getWeight(getPointer(position, heapName))) {
			errors = errors + 1;
		} //if
		
		duplicates[getPointer(position, heapName)] = true;
		
		position = position - 1;
	} //while
	
	return errors;
} //heapValidate