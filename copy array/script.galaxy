static void copyArrayAbilcmd(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryAbilcmd[array + index] = memoryAbilcmd[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayAifilter(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryAifilter[array + index] = memoryAifilter[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayActor(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryActor[array + index] = memoryActor[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayBool(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryBool[array + index] = memoryBool[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayBank(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryBank[array + index] = memoryBank[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayByte(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryByte[array + index] = memoryByte[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayCamerainfo(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryCamerainfo[array + index] = memoryCamerainfo[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayColor(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryColor[array + index] = memoryColor[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayDoodad(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryDoodad[array + index] = memoryDoodad[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayFixed(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryFixed[array + index] = memoryFixed[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayText(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryText[array + index] = memoryText[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayMarker(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryMarker[array + index] = memoryMarker[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayOrder(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryOrder[array + index] = memoryOrder[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayPlayergroup(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryPlayergroup[array + index] = memoryPlayergroup[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayPoint(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryPoint[array + index] = memoryPoint[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayRegion(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryRegion[array + index] = memoryRegion[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArraySound(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memorySound[array + index] = memorySound[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArraySoundlink(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memorySoundlink[array + index] = memorySoundlink[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayString(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryString[array + index] = memoryString[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayTimer(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryTimer[array + index] = memoryTimer[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayTransmissionsource(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryTransmissionsource[array + index] = memoryTransmissionsource[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayTrigger(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryTrigger[array + index] = memoryTrigger[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayUnit(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryUnit[array + index] = memoryUnit[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayUnitfilter(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryUnitfilter[array + index] = memoryUnitfilter[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayUnitgroup(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryUnitgroup[array + index] = memoryUnitgroup[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayUnitref(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryUnitref[array + index] = memoryUnitref[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayRevealer(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryRevealer[array + index] = memoryRevealer[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayWave(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryWave[array + index] = memoryWave[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayWaveinfo(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryWaveinfo[array + index] = memoryWaveinfo[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayWavetarget(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryWavetarget[array + index] = memoryWavetarget[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayDelegate(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryDelegate[array + index] = memoryDelegate[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static void copyArrayInt(int array, int arrayToBeCopied, int size) {
	int index = 0;
	
	while (index != size) {
		memoryInt[array + index] = memoryInt[arrayToBeCopied + index];
		index = index + 1;
	} //while
}

static funcref<copyArrayInt>[MEMORY_TYPE_COUNT] copy;

void copyArrayEx(int arrayToBeCopied, int arrayToCopyTo, int memoryType) {
	int sizeTo = sizeof(arrayToCopyTo);
	int sizeFrom = sizeof(arrayToBeCopied);
	
	if (sizeTo < sizeFrom) {
		copy[memoryType](getMemoryBlockAddress(arrayToCopyTo, memoryType), getMemoryBlockAddress(arrayToBeCopied, memoryType), sizeTo);
	} //if
	else {
		copy[memoryType](getMemoryBlockAddress(arrayToCopyTo, memoryType), getMemoryBlockAddress(arrayToBeCopied, memoryType), sizeFrom);
	} //else
	
	clearArrayRangeEx(arrayToCopyTo, sizeFrom, sizeTo - 1, memoryType);
} //copyArray

void copyArray(int arrayToBeCopied, int arrayToCopyTo) {
	copyArrayEx(arrayToBeCopied, arrayToCopyTo, getMemoryType(arrayToBeCopied));
} //copyArray

void initializeCopyArray() {
	copy[MEMORY_TYPE_ABILCMD] = copyArrayAbilcmd;
	copy[MEMORY_TYPE_AIFILTER] = copyArrayAifilter;
	copy[MEMORY_TYPE_ACTOR] = copyArrayActor;
	copy[MEMORY_TYPE_BOOL] = copyArrayBool;
	copy[MEMORY_TYPE_BANK] = copyArrayBank;
	copy[MEMORY_TYPE_BYTE] = copyArrayByte;
	copy[MEMORY_TYPE_CAMERAINFO] = copyArrayCamerainfo;
	copy[MEMORY_TYPE_COLOR] = copyArrayColor;
	copy[MEMORY_TYPE_DOODAD] = copyArrayDoodad;
	copy[MEMORY_TYPE_FIXED] = copyArrayFixed;
	copy[MEMORY_TYPE_TEXT] = copyArrayText;
	copy[MEMORY_TYPE_MARKER] = copyArrayMarker;
	copy[MEMORY_TYPE_ORDER] = copyArrayOrder;
	copy[MEMORY_TYPE_PLAYERGROUP] = copyArrayPlayergroup;
	copy[MEMORY_TYPE_POINT] = copyArrayPoint;
	copy[MEMORY_TYPE_REGION] = copyArrayRegion;
	copy[MEMORY_TYPE_SOUND] = copyArraySound;
	copy[MEMORY_TYPE_SOUNDLINK] = copyArraySoundlink;
	copy[MEMORY_TYPE_STRING] = copyArrayString;
	copy[MEMORY_TYPE_TIMER] = copyArrayTimer;
	copy[MEMORY_TYPE_TRANSMISSIONSOURCE] = copyArrayTransmissionsource;
	copy[MEMORY_TYPE_TRIGGER] = copyArrayTrigger;
	copy[MEMORY_TYPE_UNIT] = copyArrayUnit;
	copy[MEMORY_TYPE_UNITFILTER] = copyArrayUnitfilter;
	copy[MEMORY_TYPE_UNITGROUP] = copyArrayUnitgroup;
	copy[MEMORY_TYPE_UNITREF] = copyArrayUnitref;
	copy[MEMORY_TYPE_REVEALER] = copyArrayRevealer;
	copy[MEMORY_TYPE_WAVE] = copyArrayWave;
	copy[MEMORY_TYPE_WAVEINFO] = copyArrayWaveinfo;
	copy[MEMORY_TYPE_WAVETARGET] = copyArrayWavetarget;
	copy[MEMORY_TYPE_DELEGATE] = copyArrayDelegate;
	copy[MEMORY_TYPE_INT] = copyArrayInt;
} //initializeCopyArray